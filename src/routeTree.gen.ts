/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const R404LazyImport = createFileRoute('/404')()
const IndexLazyImport = createFileRoute('/')()
const BookIdParamCurrPageParamLazyImport = createFileRoute(
  '/$bookIdParam/$currPageParam',
)()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const R404LazyRoute = R404LazyImport.update({
  path: '/404',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/404.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const BookIdParamCurrPageParamLazyRoute =
  BookIdParamCurrPageParamLazyImport.update({
    path: '/$bookIdParam/$currPageParam',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/$bookIdParam.$currPageParam.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404LazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/$bookIdParam/$currPageParam': {
      id: '/$bookIdParam/$currPageParam'
      path: '/$bookIdParam/$currPageParam'
      fullPath: '/$bookIdParam/$currPageParam'
      preLoaderRoute: typeof BookIdParamCurrPageParamLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  R404LazyRoute,
  RegisterLazyRoute,
  BookIdParamCurrPageParamLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/register",
        "/$bookIdParam/$currPageParam"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/404": {
      "filePath": "404.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/$bookIdParam/$currPageParam": {
      "filePath": "$bookIdParam.$currPageParam.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
