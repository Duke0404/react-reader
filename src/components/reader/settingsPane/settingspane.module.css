/* Modal styles */
.modalOverlay {
	position: fixed;
	inset: 0;
	background-color: transparent; /* No backdrop to allow page interaction */
	display: flex;
	align-items: flex-start;
	justify-content: flex-end;
	z-index: 1000;
	pointer-events: none; /* Allow clicks to pass through to page content */
	padding: 2rem;
}

.modal {
	background: linear-gradient(135deg, rgba(var(--bg-color-2-rgb, 34, 34, 34), 0.98) 0%, rgba(var(--bg-color-2-rgb, 34, 34, 34), 0.95) 100%);
	backdrop-filter: blur(20px) saturate(180%);
	border-radius: 24px;
	box-shadow: 
		0 0 40px rgba(139, 102, 185, 0.2),
		0 20px 80px rgba(0, 0, 0, 0.3),
		inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	max-width: 420px;
	max-height: calc(100vh - 4rem);
	overflow: hidden;
	border: 1px solid rgba(139, 102, 185, 0.2);
	pointer-events: auto;
	position: sticky;
	top: 2rem;
}

/* Entry animation */
.modalOverlay[data-entering] .modal {
	animation: slideInFromRight 400ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.modalOverlay[data-exiting] .modal {
	animation: slideOutToRight 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes slideInFromRight {
	from {
		transform: translateX(100%);
		opacity: 0;
	}
	to {
		transform: translateX(0);
		opacity: 1;
	}
}

@keyframes slideOutToRight {
	from {
		transform: translateX(0);
		opacity: 1;
	}
	to {
		transform: translateX(100%);
		opacity: 0;
	}
}

.dialog {
	display: flex;
	flex-direction: column;
	width: 400px;
}

.header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 2rem 2rem 1.5rem 2rem;
	border-bottom: 1px solid rgba(255, 255, 255, 0.1);
	background: linear-gradient(180deg, rgba(255, 255, 255, 0.03) 0%, transparent 100%);
}

.header h2 {
	margin: 0;
	font-size: 1.5rem;
	font-weight: 600;
	color: var(--text-color-1);
}

.closeButton {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0.75rem;
	border: none;
	border-radius: 12px;
	background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
	color: var(--text-color-1);
	font-size: 1.2rem;
	cursor: pointer;
	transition: background-color 200ms ease-in-out, transform 200ms ease-in-out, box-shadow 200ms ease-in-out;
	overflow: hidden;
	box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	min-width: 44px;
	min-height: 44px;
}

.closeButton::before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 200px;
	height: 200px;
	background-color: rgba(255, 255, 255, 0.3);
	border-radius: 50%;
	transform: translate(-50%, -50%) scale(0);
	transition: transform 200ms ease-in-out;
	pointer-events: none;
}

.closeButton:hover::before,
.closeButton:focus::before {
	transform: translate(-50%, -50%) scale(1.5);
}

.closeButton:hover,
.closeButton:focus {
	background-color: var(--red-color);
	transform: scale(1.02);
	box-shadow: 0 0 20px 0.5px var(--bg-color-3);
}

.closeButton:active {
	transform: scale(0.95);
}

.closeButton:active::before {
	transform: translate(-50%, -50%) scale(0);
}

.pane {
	display: flex;
	flex-direction: column;
	overflow-y: auto;
	gap: 2.5rem;
	padding: 2rem;
	max-height: calc(100vh - 12rem);
	/* Custom scrollbar */
	scrollbar-width: thin;
	scrollbar-color: rgba(139, 102, 185, 0.3) transparent;
}

.pane::-webkit-scrollbar {
	width: 8px;
}

.pane::-webkit-scrollbar-track {
	background: transparent;
}

.pane::-webkit-scrollbar-thumb {
	background-color: rgba(139, 102, 185, 0.3);
	border-radius: 10px;
	border: 2px solid transparent;
	background-clip: content-box;
}

.pane::-webkit-scrollbar-thumb:hover {
	background-color: rgba(139, 102, 185, 0.5);
}

.colorModeButton[data-selected] {
	border: 4px solid var(--brand-color);
	box-shadow: 0 0 20px rgba(139, 102, 185, 0.3);
}



/* ValueSelector styles */
.valueSelector {
	display: flex;
	flex-direction: column;
	gap: 0.75rem;
	margin: 1.5rem 0;
}

.valueSelector label {
	font-size: 0.9rem;
	font-weight: 500;
	color: rgba(var(--text-color-1-rgb, 255, 255, 255), 0.8);
	letter-spacing: 0.02em;
}

.valueControls {
	display: flex;
	align-items: center;
	gap: 1rem;
}

.valueButton {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0.5rem;
	border: none;
	border-radius: 12px;
	background: linear-gradient(135deg, var(--brand-color) 0%, rgba(139, 102, 185, 0.8) 100%);
	color: white;
	font-size: 1.1rem;
	font-weight: 500;
	cursor: pointer;
	transition: background-color 200ms ease-in-out, transform 200ms ease-in-out, box-shadow 200ms ease-in-out;
	overflow: hidden;
	box-shadow: 0 2px 8px rgba(139, 102, 185, 0.3);
	min-width: 42px;
	min-height: 42px;
}

.valueButton::before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 200px;
	height: 200px;
	background-color: rgba(255, 255, 255, 0.3);
	border-radius: 50%;
	transform: translate(-50%, -50%) scale(0);
	transition: transform 200ms ease-in-out;
	pointer-events: none;
}

.valueButton:hover::before,
.valueButton:focus::before {
	transform: translate(-50%, -50%) scale(1.5);
}

.valueButton:hover,
.valueButton:focus {
	background-color: rgba(139, 102, 185, 0.9);
	transform: scale(1.02);
	box-shadow: 0 0 20px 0.5px var(--bg-color-3);
}

.valueButton:active {
	background-color: var(--brand-color);
	transform: scale(0.95);
}

.valueButton:active::before {
	transform: translate(-50%, -50%) scale(0);
}

.valueButton:disabled {
	opacity: 0.6;
	cursor: not-allowed;
}

.valueDisplay {
	background: linear-gradient(135deg, var(--bg-color-3) 0%, rgba(var(--bg-color-3-rgb, 68, 68, 68), 0.8) 100%);
	padding: 0.6rem 1.2rem;
	border-radius: 8px;
	font-size: 1rem;
	font-weight: 600;
	min-width: 3.5rem;
	text-align: center;
	color: var(--text-color-1);
	box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

/* Mobile responsive - slide up from bottom */
@media screen and (max-width: 768px) {
	.modalOverlay {
		justify-content: center;
		align-items: flex-end;
		padding: 0;
		background-color: rgba(0, 0, 0, 0.3);
		backdrop-filter: blur(8px);
	}
	
	.modal {
		width: 100vw;
		max-width: 100vw;
		height: 70vh;
		max-height: 70vh;
		position: relative;
		top: auto;
		border-radius: 28px 28px 0 0;
		box-shadow: 
			0 -10px 60px rgba(139, 102, 185, 0.3),
			0 -20px 100px rgba(0, 0, 0, 0.4);
		border: none;
		border-top: 1px solid rgba(255, 255, 255, 0.1);
	}
	
	.dialog {
		width: 100%;
		height: 100%;
	}
	
	.header {
		padding: 1.5rem 1.5rem 1rem 1.5rem;
		border-bottom: 1px solid rgba(255, 255, 255, 0.1);
		position: relative;
	}
	
	.header::before {
		content: "";
		position: absolute;
		top: 0.75rem;
		left: 50%;
		transform: translateX(-50%);
		width: 48px;
		height: 4px;
		background: linear-gradient(90deg, transparent, var(--brand-color), transparent);
		border-radius: 2px;
		opacity: 0.8;
	}
	
	.pane {
		padding: 1.5rem;
		height: calc(100% - 5rem);
		max-height: none;
		gap: 2rem;
	}
	
	.colorModeButton {
		width: 70px;
		height: 50px;
		font-size: 1rem;
	}
}

/* Mobile entry animations */
@media screen and (max-width: 768px) {
	.modalOverlay[data-entering] .modal {
		animation: slideInFromBottom 400ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
	}
	
	.modalOverlay[data-exiting] .modal {
		animation: slideOutToBottom 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
	}
}

@keyframes slideInFromBottom {
	from {
		transform: translateY(100%);
		opacity: 0;
	}
	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes slideOutToBottom {
	from {
		transform: translateY(0);
		opacity: 1;
	}
	to {
		transform: translateY(100%);
		opacity: 0;
	}
}
