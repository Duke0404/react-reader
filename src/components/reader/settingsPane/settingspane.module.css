/* Modal styles */
.modalOverlay {
	position: fixed;
	inset: 0;
	background-color: transparent; /* No backdrop to allow page interaction */
	display: flex;
	align-items: flex-start;
	justify-content: flex-end;
	z-index: 1000;
	pointer-events: none; /* Allow clicks to pass through to page content */
	padding: 2rem;
}

.modal {
	background-color: rgba(var(--bg-color-2-rgb, 34, 34, 34), 0.95);
	backdrop-filter: blur(10px);
	border-radius: 2rem;
	box-shadow: 0 0 30px 1px var(--brand-color);
	max-width: 400px;
	max-height: calc(100vh - 4rem);
	overflow: hidden;
	border: 2px solid rgba(139, 102, 185, 0.3);
	pointer-events: auto; /* Re-enable pointer events for the modal content */
	position: sticky;
	top: 2rem;
	transition: transform 300ms ease, box-shadow 300ms ease;
}

.modal:hover {
	transform: translateY(-2px);
	box-shadow: 0 5px 40px 2px var(--brand-color);
}

/* Entry animation */
.modalOverlay[data-entering] .modal {
	animation: slideInFromRight 400ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.modalOverlay[data-exiting] .modal {
	animation: slideOutToRight 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes slideInFromRight {
	from {
		transform: translateX(100%);
		opacity: 0;
	}
	to {
		transform: translateX(0);
		opacity: 1;
	}
}

@keyframes slideOutToRight {
	from {
		transform: translateX(0);
		opacity: 1;
	}
	to {
		transform: translateX(100%);
		opacity: 0;
	}
}

.dialog {
	display: flex;
	flex-direction: column;
	width: 400px;
}

.header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 2rem 2rem 1rem 2rem;
	border-bottom: 1px solid var(--bg-color-3);
}

.header h2 {
	margin: 0;
	font-size: 1.5rem;
	font-weight: 600;
	color: var(--text-color-1);
}

.closeButton {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0.75rem;
	border: none;
	border-radius: 10rem;
	background-color: var(--bg-color-3);
	color: var(--text-color-1);
	font-size: 1.2rem;
	cursor: pointer;
	transition: ease-in-out 200ms;
	overflow: hidden;
	box-shadow: 0 0 10px 0.1px var(--bg-color-3);
	min-width: 44px;
	min-height: 44px;
}

.closeButton::before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 200px;
	height: 200px;
	background-color: rgba(255, 255, 255, 0.3);
	border-radius: 50%;
	transform: translate(-50%, -50%) scale(0);
	transition: transform 200ms ease-in-out;
	pointer-events: none;
}

.closeButton:hover::before,
.closeButton:focus::before {
	transform: translate(-50%, -50%) scale(1.5);
}

.closeButton:hover,
.closeButton:focus {
	background-color: var(--red-color);
	scale: 1;
	box-shadow: 0 0 20px 0.5px var(--bg-color-3);
}

.closeButton:active {
	scale: 0.95;
}

.closeButton:active::before {
	transform: translate(-50%, -50%) scale(0);
}

.pane {
	display: flex;
	flex-direction: column;
	overflow-y: auto;
	gap: 2rem;
	padding: 1rem 2rem 2rem 2rem;
	max-height: calc(100vh - 12rem); /* Account for header and padding */
}

.color-mode-button[data-selected] {
	border: 4px solid var(--brand-color);
}

/* ValueSelector styles */
.valueSelector {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	margin: 1rem 0;
}

.valueControls {
	display: flex;
	align-items: center;
	gap: 1rem;
}

.valueButton {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0.5rem;
	border: none;
	border-radius: 10rem;
	background-color: var(--brand-color);
	color: black;
	font-size: 1rem;
	cursor: pointer;
	transition: ease-in-out 200ms;
	overflow: hidden;
	box-shadow: 0 0 10px 0.1px var(--bg-color-3);
	min-width: 40px;
	min-height: 40px;
}

.valueButton::before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 200px;
	height: 200px;
	background-color: rgba(255, 255, 255, 0.3);
	border-radius: 50%;
	transform: translate(-50%, -50%) scale(0);
	transition: transform 200ms ease-in-out;
	pointer-events: none;
}

.valueButton:hover::before,
.valueButton:focus::before {
	transform: translate(-50%, -50%) scale(1.5);
}

.valueButton:hover,
.valueButton:focus {
	background-color: color(
		from var(--brand-color) display-p3 calc(r + 0.1) calc(g + 0.1) calc(b + 0.1)
	);
	scale: 1;
	box-shadow: 0 0 20px 0.5px var(--bg-color-3);
}

.valueButton:active {
	background-color: var(--brand-color);
	scale: 0.95;
}

.valueButton:active::before {
	transform: translate(-50%, -50%) scale(0);
}

.valueButton:disabled {
	opacity: 0.6;
	cursor: not-allowed;
}

.valueDisplay {
	background-color: var(--bg-color-3);
	padding: 0.5rem 1rem;
	border-radius: 0.5rem;
	font-size: 1rem;
	font-weight: 600;
	min-width: 3rem;
	text-align: center;
	color: var(--text-color-1);
}

/* Mobile responsive - slide up from bottom */
@media screen and (max-width: 768px) {
	.modalOverlay {
		justify-content: center;
		align-items: flex-end;
		padding: 0;
		background-color: rgba(0, 0, 0, 0.1); /* Very subtle overlay to indicate modal state */
		backdrop-filter: none;
	}
	
	.modal {
		width: 100vw;
		max-width: 100vw;
		height: 60vh; /* Fixed height to leave space for content */
		max-height: 60vh;
		position: relative;
		top: auto;
		border-radius: 2rem 2rem 0 0; /* Rounded top corners only */
		box-shadow: 0 -5px 30px 1px var(--brand-color);
	}
	
	.dialog {
		width: 100%;
		height: 100%;
	}
	
	.header {
		padding: 1rem 1.5rem 0.5rem 1.5rem;
		border-bottom: 1px solid var(--bg-color-3);
		/* Add drag indicator */
		position: relative;
	}
	
	.header::before {
		content: "";
		position: absolute;
		top: 0.5rem;
		left: 50%;
		transform: translateX(-50%);
		width: 50px;
		height: 5px;
		background-color: var(--brand-color);
		border-radius: 3px;
		opacity: 0.6;
	}
	
	.pane {
		padding: 1rem 1.5rem 2rem 1.5rem;
		height: calc(100% - 5rem); /* Account for header */
		max-height: none;
	}
}

/* Mobile entry animations */
@media screen and (max-width: 768px) {
	.modalOverlay[data-entering] .modal {
		animation: slideInFromBottom 400ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
	}
	
	.modalOverlay[data-exiting] .modal {
		animation: slideOutToBottom 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
	}
}

@keyframes slideInFromBottom {
	from {
		transform: translateY(100%);
		opacity: 0;
	}
	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes slideOutToBottom {
	from {
		transform: translateY(0);
		opacity: 1;
	}
	to {
		transform: translateY(100%);
		opacity: 0;
	}
}
