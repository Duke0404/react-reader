.react-aria-Form {
	display: flex;
	flex-direction: column;
	gap: 1rem;
}

.react-aria-TextField {
	display: flex;
	flex-direction: column;
}

.react-aria-Input {
	padding: 0.5rem;
	background-color: var(--bg-color-2);
	border: 2px solid #ccc;
	border-radius: 0.5rem;
	color: var(--text-color-1);

	&[data-focused] {
		outline: none;
		border-bottom: 2px solid var(--brand-color);
	}
}

.react-aria-Label {
	font-size: 0.9rem;
	padding: 0.1rem 0.25rem;
}

.react-aria-FieldError {
	padding: 0.2rem;
	color: var(--red-color);
	font-size: 0.8rem;
}

.react-aria-Button {
	position: relative; /* Required for pseudo-element positioning */
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 1rem;
	gap: 0.5rem;
	border: none;
	border-radius: 10rem;
	background-color: var(--brand-color);
	color: black;
	font-size: 1.2rem;
	cursor: pointer;
	transition: ease-in-out 200ms;
	overflow: hidden;
	box-shadow: 0 0 10px 0.1px var(--bg-color-3);
	min-width: 54.4px;
	min-height: 54.4px;

	& span {
		font-size: 1rem;
		position: relative; /* Ensures the span stays above the pseudo-element */
		z-index: 1;
	}

	&::before {
		content: "";
		position: absolute;
		top: 50%;
		left: 50%;
		width: 200px;
		height: 200px;
		background-color: rgba(255, 255, 255, 0.3); /* Bubble effect color */
		border-radius: 50%;
		transform: translate(-50%, -50%) scale(0);
		transition: transform 200ms ease-in-out;
		pointer-events: none; /* Ensures the pseudo-element doesn't interfere with clicks */
	}

	&[data-hovered]::before,
	&[data-focused]::before {
		transform: translate(-50%, -50%) scale(1.5); /* Adjust scale for bubble size */
	}

	&[data-hovered],
	&[data-focused] {
		background-color: color(
			from var(--brand-color) display-p3 calc(r + 0.1) calc(g + 0.1) calc(b + 0.1)
		);
		scale: 1;
		box-shadow: 0 0 20px 0.5px var(--bg-color-3);
	}

	&[data-pressed] {
		background-color: var(--brand-color);
		scale: 0.95;
	}

	&[data-pressed]::before {
		transform: translate(-50%, -50%) scale(0); /* Hide bubble effect on press */
	}
}

.react-aria-Switch {
	display: flex;
	align-items: center;
	cursor: pointer;
	gap: 0.5rem;

	.indicator {
		display: flex;
		align-items: center;
		padding: 0.1rem;
		width: 2.25rem;
		height: 1.4rem;
		border: 2px solid var(--brand-color);
		background-color: var(--bg-color-1);
		border-radius: 1rem;
		transition: all 200ms;

		&:before {
			content: "";
			display: block;
			width: 70%;
			height: 100%;
			background: var(--brand-color);
			border-radius: 1rem;
			transition: all 200ms;
		}
	}

	&[data-selected] {
		.indicator {
			&:before {
				background-color: var(--brand-color);
				transform: translateX(40%);
			}
		}
	}
}

.react-aria-Slider {
	display: grid;
	grid-template-areas:
		"label output"
		"track track";
	grid-template-columns: 1fr auto;

	.react-aria-Label {
		grid-area: label;
	}

	.react-aria-SliderOutput {
		grid-area: output;
	}

	.react-aria-SliderTrack {
		grid-area: track;
		position: relative;

		/* track line */
		&:before {
			content: "";
			display: block;
			position: absolute;
			background-color: var(--text-color-2);
			opacity: 0.6;
			border-radius: 1rem;
		}
	}

	.react-aria-SliderThumb {
		width: calc(2.24rem - 2px);
		height: calc(1.3rem - 2px);
		border-radius: 1rem;
		background-color: var(--brand-color);
		forced-color-adjust: none;

		&[data-dragging],
		&[data-focus-visible] {
			scale: 1.02;
		}
	}

	&[data-orientation="horizontal"] {
		flex-direction: column;
		justify-content: center;
		width: 100%;

		.react-aria-SliderTrack {
			height: 30px;
			width: 90%;

			&:before {
				height: 2px;
				width: 100%;
				top: 50%;
				transform: translateY(-50%);
			}
		}

		.react-aria-SliderThumb {
			top: 50%;
		}
	}
}

/* Popover styles */
.react-aria-Popover {
	background: var(--bg-color-2);
	border: 1px solid var(--bg-color-3);
	border-radius: 0.5rem;
	box-shadow: 0 8px 20px rgba(0 0 0 / 0.1);
	color: var(--text-color-1);
	max-width: 250px;
	padding: 1rem;
	outline: none;
	transform-origin: top center;
	animation: fadeIn 200ms ease;

	&[data-entering] {
		animation:
			fadeIn 200ms ease,
			slideIn 200ms ease;
	}

	&[data-exiting] {
		animation:
			fadeOut 200ms ease,
			slideOut 200ms ease;
	}
}

/* Dialog styles */
.react-aria-Modal {
	position: fixed;
	inset: 0;
	z-index: 50;
	display: flex;
	align-items: center;
	justify-content: center;
	background-color: rgba(0, 0, 0, 0.5);
}

.react-aria-Dialog {
	background: var(--bg-color-2);
	padding: 1.5rem;
	border-radius: 0.5rem;
	box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
	max-width: 28rem;
	width: 100%;
	outline: none;
}

.react-aria-Dialog[role="alertdialog"] {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.react-aria-ToggleButtonGroup {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;

	& .react-aria-Button {
		width: 100%;
		border-radius: 0.5rem;

		&:nth-child(1) {
			border-top-left-radius: 25px;
			border-top-right-radius: 25px;
		}

		&:nth-last-child(1) {
			border-bottom-left-radius: 25px;
			border-bottom-right-radius: 25px;
		}
	}
}

/* Animations */
@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes fadeOut {
	from {
		opacity: 1;
	}
	to {
		opacity: 0;
	}
}

@keyframes slideIn {
	from {
		transform: translateY(-10px);
	}
	to {
		transform: translateY(0);
	}
}

@keyframes slideOut {
	from {
		transform: translateY(0);
	}
	to {
		transform: translateY(-10px);
	}
}